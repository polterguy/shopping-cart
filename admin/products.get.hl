
// Read endpoint with paging, sorting on fully qualified table name (TABLE_NAME.COLUMN_NAME), filtering selecting records from your products table in your shopping-cart-demo database returning product_id, name, description, sku, price, image_url filtering on product_id, name, description, sku, price, image_url with authentication and authorisation for root,admin roles
.arguments

   // Number of records to return
   limit:long

   // Offset into the dataset of where to start retrieving records
   offset:long

   // What column to order by
   order:string

   // What direction to order, can be 'asc' or 'desc' implying ascending and descending
   direction:string

   // products table product_id column equality exact match filtering
   products.product_id.eq:long

   // products table name column wildcard filtering with SQL like '%' comparison
   products.name.like:string

   // products table name column equality exact match filtering
   products.name.eq:string

   // products table description column wildcard filtering with SQL like '%' comparison
   products.description.like:string

   // products table description column equality exact match filtering
   products.description.eq:string

   // products table sku column wildcard filtering with SQL like '%' comparison
   products.sku.like:string

   // products table sku column equality exact match filtering
   products.sku.eq:string

   // products table price column equality exact match filtering
   products.price.eq:decimal

   // products table image_url column wildcard filtering with SQL like '%' comparison
   products.image_url.like:string

   // products table image_url column equality exact match filtering
   products.image_url.eq:string

// Meta data description for endpoint
.description:Read endpoint with paging, sorting on fully qualified table name (TABLE_NAME.COLUMN_NAME), filtering selecting records from your products table in your shopping-cart-demo database returning product_id, name, description, sku, price, image_url filtering on product_id, name, description, sku, price, image_url with authentication and authorisation for root,admin roles

// Type of endpoint
.type:crud-read

// Verifying user is authorized to access endpoint.
auth.ticket.verify:root,admin

// Opening up our database connection.
data.connect:[generic|shopping-cart-demo]
   database-type:sqlite

   // Parametrising our read invocation with ordering arguments if specified.
   add:x:./*/data.read
      get-nodes:x:@.arguments/*/order
      get-nodes:x:@.arguments/*/direction
   remove-nodes:x:@.arguments/*/order
   remove-nodes:x:@.arguments/*/direction

   // Parametrising our read invocation with paging arguments if specified.
   add:x:./*/data.read
      get-nodes:x:@.arguments/*/limit
      get-nodes:x:@.arguments/*/offset
   remove-nodes:x:@.arguments/*/limit
   remove-nodes:x:@.arguments/*/offset

   // Parametrising our read invocation with filtering arguments.
   add:x:./*/data.read/*/where/*
      get-nodes:x:@.arguments/*

   // Reading data from database.
   data.read
      database-type:sqlite
      table:products
      columns
         products.product_id
         products.name
         products.description
         products.sku
         products.price
         products.image_url
      where
         and

   // Returning result of above read invocation to caller.
   return-nodes:x:@data.read/*
