
/*
 * Adds an item to your shopping cart
 *
 * [product_id] is mandatory and has to be an existing product_id from an item existing in your database,
 * and [quantity] will default to 1 if not specified.
 */
.arguments
   sku:string
   quantity:int
   session:string
.description:Adds an item to your shopping cart
.type:public

// Defaulting [quantity] to 1 if not specified.
validators.default:x:@.arguments
   quantity:int:1

/*
 * Invokes the SQL CRUD Read slot with the specified parameters.
 *
 * Provide [connection-string], [database-type], [database], and [table] to inform the action of
 * what database/table you want to execute your SQL towards, and add [and] or [or] arguments
 * to filter your returns, in addition to [limit] and [offset] to apply paging. Use [order]
 * and [direction] to sort either ascending or descending. Notice, you can only use one of [or]
 * or [and], and not both.
 */
execute:magic.workflows.actions.execute
   name:sql-read-products
   filename:/misc/workflows/actions/sql/sql-read.hl
   arguments
      columns
         .:product_id
      database:shopping-cart
      table:products
      and
         sku:x:@.arguments/*/sku

/*
 * Invokes the SQL CRUD Create slot with the specified parameters.
 *
 * Provide [connection-string], [database-type], [database], and [table] to inform the action of
 * what database/table you want to execute your SQL towards, and [values] for your actual values
 * to insert.
 */
execute:magic.workflows.actions.execute
   name:sql-create
   filename:/misc/workflows/actions/sql/sql-create.hl
   arguments
      database:shopping-cart
      table:items
      values
         product_id:x:../*/execute/=sql-read-products/*/*/product_id
         quantity:x:@.arguments/*/quantity
         session_id:x:@.arguments/*/session

// Returns the result of your last action.
return-nodes:x:@execute/*
